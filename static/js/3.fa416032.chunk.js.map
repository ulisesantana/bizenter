{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","../node_modules/semantic-ui-react/dist/es/elements/List/List.js","views/AssetCRUD.tsx"],"names":["SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","vertical","Group","Inline","__webpack_exports__","ListDescription","create","factories","List_ListDescription","ListHeader","List_ListHeader","ListContent","description","header","verticalAlign","List_ListContent","ListIcon","Icon","name","List_ListIcon","ListItem_ListItem","_Component","ListItem","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","e","invoke_default","inherits_default","createClass_default","key","value","_this$props","active","icon","image","valueProp","data-value","role","onClick","handleClick","iconElement","autoGenerateKey","imageElement","Image","react","isPlainObject_default","defaultProps","headerElement","descriptionElement","List_ListItem","ListList","List_ListList","List_List","List","predefinedProps","itemProps","_this2","animated","bulleted","celled","divided","items","link","ordered","relaxed","selection","map_default","item","overrideProps","handleItemOverrides","elements_List_List","AssetCRUD","_ref2","id","assets","holders","records","dispatch","onSubmit","type","Actions","UPSERT_ASSET","payload","_useState","useState","_useState2","slicedToArray","editionMode","setEditionMode","_useState3","_useState4","currentAsset","setCurrentAsset","onClickAsset","preventDefault","dataset","currentTarget","console","log","history","filter","_ref","asset","Fragment","components","AssetForm","values","x","assignedTo","map","_ref3","Item","data-id","Content","Header","_ref4"],"mappings":"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","file":"static/js/3.fa416032.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          description = _this$props.description,\n          disabled = _this$props.disabled,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          image = _this$props.image,\n          value = _this$props.value;\n      var ElementType = getElementType(ListItem, this.props);\n      var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n      var rest = getUnhandledProps(ListItem, this.props);\n      var valueProp = ElementType === 'li' ? {\n        value: value\n      } : {\n        'data-value': value\n      };\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), children);\n      }\n\n      var iconElement = ListIcon.create(icon, {\n        autoGenerateKey: false\n      });\n      var imageElement = Image.create(image, {\n        autoGenerateKey: false\n      }); // See description of `content` prop for explanation about why this is necessary.\n\n      if (!isValidElement(content) && _isPlainObject(content)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, ListContent.create(content, {\n          autoGenerateKey: false,\n          defaultProps: {\n            header: header,\n            description: description\n          }\n        }));\n      }\n\n      var headerElement = ListHeader.create(header, {\n        autoGenerateKey: false\n      });\n      var descriptionElement = ListDescription.create(description, {\n        autoGenerateKey: false\n      });\n\n      if (iconElement || imageElement) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && React.createElement(ListContent, null, headerElement, descriptionElement, content));\n      }\n\n      return React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), headerElement, descriptionElement, content);\n    }\n  }]);\n\n  return ListItem;\n}(Component);\n\n_defineProperty(ListItem, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"]);\n\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          animated = _this$props.animated,\n          bulleted = _this$props.bulleted,\n          celled = _this$props.celled,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          divided = _this$props.divided,\n          floated = _this$props.floated,\n          horizontal = _this$props.horizontal,\n          inverted = _this$props.inverted,\n          items = _this$props.items,\n          link = _this$props.link,\n          ordered = _this$props.ordered,\n          relaxed = _this$props.relaxed,\n          selection = _this$props.selection,\n          size = _this$props.size,\n          verticalAlign = _this$props.verticalAlign;\n      var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n      var rest = getUnhandledProps(List, this.props);\n      var ElementType = getElementType(List, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), content);\n      }\n\n      return React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), _map(items, function (item) {\n        return ListItem.create(item, {\n          overrideProps: _this2.handleItemOverrides\n        });\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\n_defineProperty(List, \"Content\", ListContent);\n\n_defineProperty(List, \"Description\", ListDescription);\n\n_defineProperty(List, \"Header\", ListHeader);\n\n_defineProperty(List, \"Icon\", ListIcon);\n\n_defineProperty(List, \"Item\", ListItem);\n\n_defineProperty(List, \"List\", ListList);\n\n_defineProperty(List, \"handledProps\", [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"]);\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default List;","import {AssetForm} from \"../components/AssetForm\";\nimport {List, Segment} from \"semantic-ui-react\";\nimport React, {FC, MouseEventHandler, useState} from \"react\";\nimport {Asset, Store, TransferRecord} from \"../types\";\nimport {Action, Actions} from \"../store\";\nimport {BackButton, TransferRecordTable} from \"../components\";\n\nexport interface AssetCRUDProps extends Store {\n  dispatch: (x: Action) => void\n}\n\n\nfunction filterTransferRecords(id: string) {\n  return ({asset}: TransferRecord) => asset === id;\n}\n\nexport const AssetCRUD: FC<AssetCRUDProps> = ({assets, holders, records, dispatch}) => {\n  const onSubmit = (a: Asset) => {\n    dispatch({type: Actions.UPSERT_ASSET, payload: a})\n  };\n\n  const [editionMode, setEditionMode] = useState(false);\n  const [currentAsset, setCurrentAsset] = useState('');\n\n  const onClickAsset: MouseEventHandler<HTMLAnchorElement> =\n    e => {\n      e.preventDefault();\n      const {currentTarget: {dataset}} = e;\n\n      if (dataset.id) {\n        console.log(assets[dataset.id]);\n        setCurrentAsset(dataset.id);\n        setEditionMode(true);\n      }\n    };\n\n  const onClickBack = () => {\n    setEditionMode(false);\n  };\n\n  const history = records\n    .filter(filterTransferRecords(currentAsset));\n\n  return editionMode ?\n    <>\n      <Segment>\n        <BackButton onClick={onClickBack}/>\n        <h2>Edit Asset</h2>\n        <AssetForm holders={holders} onSubmit={onSubmit} asset={assets[currentAsset]}/>\n      </Segment>\n      {history.length &&\n      <Segment>\n        <h2>{assets[currentAsset].name} History</h2>\n        <TransferRecordTable\n          holders={holders}\n          assets={assets}\n          records={history}\n        />\n      </Segment>\n      }\n    </>\n    :\n    <>\n      <Segment>\n        <h2>Add Asset</h2>\n        <AssetForm holders={holders} onSubmit={onSubmit}/>\n      </Segment>\n      <Segment>\n        <h3>Free</h3>\n        <List divided relaxed>\n          {\n            Object.values(assets).filter(x => !x.assignedTo).map(({name, id, assignedTo}) =>\n              <List.Item key={id} onClick={onClickAsset} data-id={id}>\n                <List.Content>\n                  <List.Header>{name}</List.Header>\n                  {typeof assignedTo === 'string' ? `Assigned to ${holders[assignedTo].name}` : 'Free'}\n                </List.Content>\n              </List.Item>)\n          }\n        </List>\n        <h3>Taken</h3>\n        <List divided relaxed>\n          {\n            Object.values(assets).filter(x => x.assignedTo).map(({name, id, assignedTo}) =>\n              <List.Item key={id} onClick={onClickAsset} data-id={id}>\n                <List.Content>\n                  <List.Header>{name}</List.Header>\n                  {typeof assignedTo === 'string' ? `Assigned to ${holders[assignedTo].name}` : 'Free'}\n                </List.Content>\n              </List.Item>)\n          }\n        </List>\n      </Segment>\n    </>\n};\n\nexport default AssetCRUD;\n"],"sourceRoot":""}