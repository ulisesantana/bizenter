{"version":3,"sources":["store/actions.ts","services/StoreService.ts","constants.ts","store/data.ts","store/sortStore.ts","store/initialState.ts","entities.ts","store/reducer.ts","store/index.ts","components/BackButton.tsx","components/HolderTable/HolderTable.tsx","components/Menu.tsx","components/index.ts","components/HolderForm/HolderForm.tsx","components/HolderForm/index.ts","components/AssetForm/AssetForm.tsx","components/AssetForm/index.ts","utils/dataHelper.ts","utils/sectionHandler.ts","utils/index.ts","components/TransferRecordTable/TransferRecordTable.tsx","components/TransferRecordTable/index.ts","App/App.tsx","App/index.ts","serviceWorker.ts","index.tsx","components/FormButton.tsx"],"names":["Actions","StoreService","Object","freeze","get","itemName","item","localStorage","getItem","numPatt","RegExp","jsonPatt","test","JSON","parse","parseFloat","set","setItem","stringify","toString","remove","removeItem","NAMESPACE","store","assets","holders","records","sortStore","_ref","exec","values","sortByName","mapToID","sortByDateDesc","getInitialState","cache","generateAsset","asset","objectSpread","id","uuid4","createDate","Date","toISOString","name","notes","blocked","serial","assignedTo","updateDate","x","rootReducer","state","action","fromHolderId","toHolderId","assetId","holder","type","payload","UPSERT_HOLDER","uuid","defineProperty","UPSERT_ASSET","hasOwnProperty","_ref2","from","to","concat","date","REPLACE_ALL","UPDATE_ALL","DELETE_ALL","reducer","__webpack_require__","d","__webpack_exports__","BackButton","onClick","react_default","a","createElement","Icon","HolderTable","Table","celled","selectable","Header","Row","HeaderCell","Body","map","key","data-id","Cell","Menu","section","handlers","Menu_Menu","icon","stackable","Item","active","Section","Assets","goToAssets","Holders","goToHolders","TransferRecords","gotoTransferRecords","BackButton_BackButton","HolderTable_HolderTable","TransferRecordTable","components_Menu_Menu","initialState","HolderForm","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","editMode","undefined","props","onChangeHandler","onChangeFormFieldHandler","setState","onSubmit","e","preventDefault","inherits","createClass","value","Form","Input","onChange","placeholder","label","TextArea","Checkbox","checked","FormButton","Component","HolderForm_HolderForm","AssetForm","options","toOptions","Fragment","required","Select","fluid","search","AssetForm_AssetForm","reduce","acc","y","sortBy","prop","desc","sort","aLabel","bLabel","toLowerCase","text","_ref3","event","_ref4","goToGenerator","setSection","useSectionManager","initialSection","_useState","useState","_useState2","slicedToArray","initialData","rest","fn","TransferRecordTable_TransferRecordTable","_","HolderCRUD","React","lazy","then","bind","AssetCRUD","Promise","resolve","SuspenseLoader","Dimmer","Loader","size","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","_useSectionManager","_useSectionManager2","components","Container","className","react","fallback","App_SuspenseLoader","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","color"],"mappings":"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","file":"static/js/main.89279f14.chunk.js","sourcesContent":["import {Asset, Store} from \"../types\";\n\nexport enum Actions {\n  UPSERT_ASSET = 'UPSERT_ASSET',\n  UPSERT_HOLDER = 'UPSERT_HOLDER',\n  UPDATE_ALL = 'UPDATE_ALL',\n  REPLACE_ALL = 'REPLACE_ALL',\n  DELETE_ALL = 'DELETE_ALL'\n}\n\nexport interface TransferPayload extends Asset{\n  from: string\n  to: string\n}\n\nexport type Payload =\n  Partial<TransferPayload> |\n  Store\n\nexport interface Action {\n  type: Actions,\n  payload?: Payload\n}\n","export const StoreService = Object.freeze({\n  get(itemName: string) {\n    const item = localStorage.getItem(itemName);\n    const numPatt = new RegExp(/^\\d+$/);\n    const jsonPatt = new RegExp(/[[{].*[}\\]]/);\n\n    if(item){\n      if(jsonPatt.test(item)){\n        return JSON.parse(item);\n      }\n      else if(numPatt.test(item)) {\n        return parseFloat(item);\n      }\n      else {\n        return item;\n      }\n    }\n    else {\n      return undefined;\n    }\n\n  },\n\n  set(itemName: string, item: object | string | number | any[]) {\n    if(typeof item === \"object\"){\n      localStorage.setItem(itemName, JSON.stringify(item));\n    } else {\n      localStorage.setItem(itemName, item.toString());\n    }\n  },\n\n  remove(itemName: string) {\n    localStorage.removeItem(itemName);\n  }\n});","export const NAMESPACE = 'bizenter@store';\n","import {Store} from \"../types\";\n\nexport const store: Store = {\n  assets: {},\n  holders: {},\n  records: []\n} as Store;\n","import {Store, TransferRecord} from \"../types\";\nimport {exec, mapToID, sortByDateDesc, sortByName} from \"../utils\";\n\nexport function sortStore({assets, holders, records}: Store): Store {\n  return {\n    assets: exec(Object.values(assets), sortByName, mapToID),\n    holders: exec(Object.values(holders), sortByName, mapToID),\n    records: sortByDateDesc(records) as TransferRecord[]\n  }\n}\n","import {Store} from \"../types\";\nimport {StoreService} from \"../services\";\nimport {NAMESPACE} from \"../constants\";\nimport {store} from \"./data\";\nimport {sortStore} from \"./sortStore\";\n\nexport function getInitialState(): Store {\n  const cache = StoreService.get(NAMESPACE);\n  if (!!cache) {\n    return cache as Store;\n  } else {\n    return sortStore(store)\n  }\n}\n","import {Asset, Holder, TransferRecord} from \"./types\";\nimport uuid4 from 'uuid/v4';\n\nexport function generateAsset(asset: Partial<Asset>): Asset{\n  return {\n    id: uuid4(),\n    createDate: (new Date()).toISOString(),\n    name: '',\n    notes: '',\n    blocked: false,\n    serial: '',\n    assignedTo: false,\n    ...asset,\n    updateDate: (new Date()).toISOString(),\n  }\n}\n\nexport function generateHolder(holder: Partial<Holder>): Holder{\n  return {\n    id: uuid4(),\n    createDate: (new Date()).toISOString(),\n    name: 'meh',\n    notes: '',\n    blocked: false,\n    ...holder,\n    updateDate: (new Date()).toISOString(),\n  }\n}\n\nexport function generateRecord\n(fromHolderId: string, toHolderId: string, assetId: string): TransferRecord {\n  return {\n    id: uuid4(),\n    date: (new Date()).toISOString(),\n    from: fromHolderId,\n    to: toHolderId,\n    asset: assetId,\n  }\n}\n","import {Store, TransferRecord, Holder, Asset} from \"../types\";\nimport {Action, Actions} from \"./actions\";\nimport {exec} from \"../utils\";\nimport {StoreService} from \"../services\";\nimport {NAMESPACE} from \"../constants\";\nimport uuid from \"uuid/v4\";\nimport {generateAsset, generateHolder, generateRecord} from \"../entities\";\nimport {sortStore} from \"./sortStore\";\n\nfunction reducer(state: Store, {type, payload}: Action): Store {\n  switch (type) {\n    case Actions.UPSERT_HOLDER:{\n      const id = (payload as Holder).id || uuid();\n      return {\n        ...state,\n        holders: {\n          ...state.holders,\n          [id]: generateHolder({id, ...payload})\n        }\n      };\n    }\n    case Actions.UPSERT_ASSET:{\n      const id = (payload as Asset).id || uuid();\n      if ((payload as TransferRecord).hasOwnProperty('from')) {\n        const {from, to: assignedTo} = payload as TransferRecord;\n        return {\n          ...state,\n          records: state.records\n            .concat(generateRecord(from as string, assignedTo as string, id)),\n          assets: {\n            ...state.assets,\n            [id]: generateAsset({id, assignedTo, ...payload})\n          }\n        };\n      } else {\n        return {\n          ...state,\n          assets: {\n            ...state.assets,\n            [id]: generateAsset({id, ...payload})\n          }\n        };\n      }\n\n    }\n    case Actions.REPLACE_ALL: {\n      return payload as Store;\n    }\n    case Actions.UPDATE_ALL: {\n      return {\n        ...state,\n        ...payload as Store\n      };\n    }\n    case Actions.DELETE_ALL: {\n      StoreService.remove(NAMESPACE);\n      return {\n        assets: {},\n        holders: {},\n        records: []\n      } as Store;\n    }\n    default:\n      return state\n  }\n}\n\nconst cache = (x: Store) => {\n  StoreService.set(NAMESPACE, x);\n  return x;\n};\n\nexport function rootReducer(state: Store, action: Action): Store {\n  return exec(\n    reducer(state, action),\n    sortStore,\n    cache\n  );\n}\n","export * from './actions';\nexport * from './initialState';\nexport * from './reducer';","import React, {FC} from 'react';\nimport {Button} from \"../types\";\nimport {Icon} from \"semantic-ui-react\";\n\nexport interface BackButtonProps extends Button {}\n\nexport const BackButton: FC<BackButtonProps> = ({onClick}) =>\n  <Icon name={'chevron left'} onClick={onClick}/>;\n","import React, {FC, MouseEventHandler} from \"react\";\nimport {Table} from \"semantic-ui-react\";\nimport {Holder} from \"../../types\";\n\nexport interface HolderTableProps {\n  holders: Record<string, Holder>,\n  onClick: MouseEventHandler\n}\n\nexport const HolderTable: FC<HolderTableProps> = ({holders, onClick}) => (\n  <Table celled selectable>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Name</Table.HeaderCell>\n        <Table.HeaderCell>Status</Table.HeaderCell>\n        <Table.HeaderCell>Notes</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      { Object.values(holders).map(({name, notes, blocked, id}) =>\n        <Table.Row key={id} data-id={id} onClick={onClick}>\n          <Table.Cell>{name}</Table.Cell>\n          <Table.Cell>{blocked ? 'Blocked' : 'Active'}</Table.Cell>\n          <Table.Cell>{notes}</Table.Cell>\n        </Table.Row>\n      )}\n    </Table.Body>\n  </Table>\n);\n\n\n","import {Section, SectionHandlers} from \"../utils\";\nimport React, {FC} from \"react\";\nimport {Menu as MenuSemantic, Icon} from \"semantic-ui-react\";\n\nexport interface MenuProps {\n  section: Section,\n  handlers: SectionHandlers\n}\n\nexport const Menu: FC<MenuProps> = ({section, handlers}) => (\n  <MenuSemantic icon='labeled' stackable>\n    <MenuSemantic.Item\n      name='warehouse'\n      active={section === Section.Assets}\n      onClick={handlers.goToAssets}\n    >\n      <Icon name='warehouse'/>\n      Assets\n    </MenuSemantic.Item>\n\n    <MenuSemantic.Item\n      name='user'\n      active={section === Section.Holders}\n      onClick={handlers.goToHolders}\n    >\n      <Icon name='user'/>\n      Holders\n    </MenuSemantic.Item>\n\n    <MenuSemantic.Item\n      name='history'\n      active={section === Section.TransferRecords}\n      onClick={handlers.gotoTransferRecords}\n    >\n      <Icon name='history'/>\n      History\n    </MenuSemantic.Item>\n  </MenuSemantic>\n);\n","export * from './AssetForm'\nexport * from './BackButton'\nexport * from './FormButton'\nexport * from './HolderForm'\nexport * from './HolderTable'\nexport * from './TransferRecordTable'\nexport * from './Menu'\n","import React, {Component, FormEventHandler} from \"react\";\nimport {Holder} from \"../../types\";\nimport {Form} from \"semantic-ui-react\";\nimport {onChangeFormFieldHandler} from \"../../utils\";\nimport {FormButton} from \"../FormButton\";\n\nexport interface HolderFormProps {\n  holder?: Holder,\n  onSubmit: (h: any) => void\n}\n\nconst initialState = {\n  name: '',\n  notes: '',\n  blocked: false\n};\n\nexport class HolderForm extends Component<HolderFormProps, Holder> {\n  editMode = this.props.holder !== undefined;\n  state = this.editMode\n    ? this.props.holder as Holder\n    : initialState as Holder;\n\n  onChangeHandler = onChangeFormFieldHandler(\n    this.state,\n    (x: Holder) => {\n      this.setState(x)\n    }\n  );\n\n  onSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n\n    if (!this.editMode) {\n      this.setState(initialState);\n    }\n  };\n\n  render() {\n    return (\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onChangeHandler}\n            placeholder='Full Name'\n            label='Full Name'\n          />\n          <Form.TextArea\n            name=\"notes\"\n            value={this.state.notes}\n            onChange={this.onChangeHandler}\n            placeholder='Observations'\n            label='Notes'\n          />\n          <Form.Checkbox\n            name=\"blocked\"\n            checked={this.state.blocked}\n            onChange={this.onChangeHandler}\n            label='Blocked'\n          />\n          <FormButton editMode={this.editMode}/>\n        </Form>\n    )\n  }\n}\n","export * from './HolderForm';\n","import React, {Component, FormEventHandler} from \"react\";\nimport {Asset, Holder} from \"../../types\";\nimport {Form} from \"semantic-ui-react\";\nimport {onChangeFormFieldHandler, toOptions} from \"../../utils\";\nimport {TransferPayload} from \"../../store\";\nimport {FormButton} from \"../FormButton\";\n\nexport interface AssetFormProps {\n  asset?: Asset,\n  holders: Record<string, Holder>,\n  onSubmit: (x: Asset | TransferPayload) => void\n}\n\nconst initialState = {\n  name: '',\n  notes: '',\n  blocked: false,\n  serial: '',\n  assignedTo: false\n};\n\nexport class AssetForm extends Component<AssetFormProps, Asset> {\n  editMode = this.props.asset !== undefined;\n  state = this.editMode\n    ? this.props.asset as Asset\n    : initialState as Asset;\n\n\n  options = toOptions(this.props.holders);\n\n  onChangeHandler = onChangeFormFieldHandler(\n    this.state,\n    (x: Holder) => {\n      this.setState(x)\n    }\n  );\n\n  onSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    const from = this.editMode\n      ? this.props.asset!.assignedTo\n      : null;\n\n    if (from === this.state.assignedTo) {\n      this.props.onSubmit(this.state);\n    } else {\n      this.props.onSubmit({\n          ...this.state,\n          from,\n          to: this.state.assignedTo\n        } as TransferPayload\n      );\n    }\n\n    if (!this.editMode) {\n      this.setState(initialState)\n    }\n  };\n\n  render() {\n\n    return (\n      <>\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            name=\"name\"\n            value={this.state.name}\n            required\n            onChange={this.onChangeHandler}\n            placeholder='Full Name'\n            label='Full Name'\n          />\n          <Form.TextArea\n            name=\"notes\"\n            value={this.state.notes}\n            onChange={this.onChangeHandler}\n            placeholder='Observations'\n            label='Notes'\n          />\n          <Form.Checkbox\n            name=\"blocked\"\n            checked={this.state.blocked}\n            onChange={this.onChangeHandler}\n            label='Blocked'\n          />\n          <Form.Input\n            name=\"serial\"\n            required\n            value={this.state.serial}\n            onChange={this.onChangeHandler}\n            placeholder='LHG1L451G6L1GL41'\n            label='Serial Number'\n          />\n          <Form.Select\n            fluid\n            name=\"assignedTo\"\n            label='Holder'\n            options={this.options}\n            placeholder='Holder'\n            search\n            onChange={this.onChangeHandler}\n            value={this.state.assignedTo}\n          />\n          <FormButton editMode={this.editMode}/>\n        </Form>\n      </>\n    )\n  }\n}\n","export * from './AssetForm';\n","import {Entity, Holder, SelectOption} from \"../types\";\nimport {SyntheticEvent} from \"react\";\n\nexport function mapToID<T extends { id: string }>(x: T[]): Record<string, T> {\n  return Object.values(x).reduce((acc, y) => ({...acc, [y.id]: y}), {})\n}\n\nexport function sortBy(prop: string, desc = false) {\n  return (x: Entity[]) =>\n    x.sort((\n      {[prop as keyof Entity]: aLabel},\n      {[prop as keyof Entity]: bLabel}\n      ) =>\n        aLabel.toLowerCase() < bLabel.toLowerCase()\n          ? (desc ? 1 : -1)\n          : aLabel.toLowerCase() > bLabel.toLowerCase()\n          ? (desc ? -1 : 1)\n          : 0\n    )\n}\n\nexport const sortByName = sortBy('name');\nexport const sortByDateAsc = sortBy('date');\nexport const sortByDateDesc = sortBy('date', true);\n\nfunction removeById(id: string) {\n  return <T extends { id: string }>(x: T) => x.id !== id\n}\n\nexport function filterById(id: string) {\n  return <T extends Entity>(x: T[]) => x.filter(removeById(id))\n}\n\nexport function toOptions(x: Record<string, Holder>): SelectOption[] {\n  return [\n    {key: 'free', text: 'Free', value: false} as SelectOption\n  ].concat(Object.values(x).map(\n    ({id, name}) => ({key: id, text: name, value: id})\n  ));\n}\n\nexport function onChangeFormFieldHandler<T, E extends SyntheticEvent, D extends { [key: string]: string }>\n(state: T, setState: (x: any) => void) {\n  return (event: E, {name, value, checked}: D) => {\n    event.preventDefault();\n    setState({[name]: checked !== undefined ? checked : value})\n  }\n}\n\n","import {useState} from 'react';\n\nexport enum Section {\n  TransferRecords = 'TRANSFER_RECORDS',\n  Holders = 'HOLDERS',\n  Assets = 'ASSETS'\n}\n\nfunction goToGenerator(section: Section, setSection: Function){\n  return () => {\n    setSection(section)\n  };\n}\n\nexport interface SectionHandlers {\n  gotoTransferRecords: () => void,\n  goToHolders: () => void,\n  goToAssets: () => void\n}\n\nexport function useSectionManager(initialSection = Section.Assets): [Section, SectionHandlers]{\n  const [section, setSection] = useState(initialSection);\n  return [\n    section,\n    {\n      gotoTransferRecords: goToGenerator(Section.TransferRecords, setSection),\n      goToHolders: goToGenerator(Section.Holders, setSection),\n      goToAssets: goToGenerator(Section.Assets, setSection)\n    }\n  ];\n}\n","export * from './dataHelper';\nexport * from './sectionHandler';\n\nexport const copyToClipboard = (str: string) => {\n  const el = document.createElement('textarea');\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  const selected =\n    document.getSelection()!.rangeCount > 0\n      ? document.getSelection()!.getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection()!.removeAllRanges();\n    document.getSelection()!.addRange(selected);\n  }\n};\n\nexport function exec(initialData: any, ...rest: Function[]) {\n  return rest.reduce((acc, fn) => fn(acc), initialData)\n}\n\nexport const isString = (x: any) => x instanceof String;\n","import React, {FC} from \"react\";\nimport {Table} from \"semantic-ui-react\";\nimport {Asset, Holder, TransferRecord} from \"../../types\";\n\nexport interface TransferRecordTableProps {\n  assets: Record<string, Asset>\n  holders: Record<string, Holder>\n  records: TransferRecord[]\n}\n\nexport const TransferRecordTable: FC<TransferRecordTableProps> = ({holders, assets, records}) => (\n  <Table celled selectable>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Date</Table.HeaderCell>\n        <Table.HeaderCell>Asset</Table.HeaderCell>\n        <Table.HeaderCell>Asset Serial</Table.HeaderCell>\n        <Table.HeaderCell>From</Table.HeaderCell>\n        <Table.HeaderCell>To</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      { records.map(({id, asset, date, from, to}) =>\n        <Table.Row key={id} data-id={id}>\n          <Table.Cell>{date}</Table.Cell>\n          <Table.Cell>{assets[asset].name}</Table.Cell>\n          <Table.Cell>{assets[asset].serial}</Table.Cell>\n          <Table.Cell>{ holders[from as string] && holders[from as string].name}</Table.Cell>\n          <Table.Cell>{ holders[to as string] && holders[to as string].name}</Table.Cell>\n        </Table.Row>\n      )}\n    </Table.Body>\n  </Table>\n);\n\nexport default TransferRecordTable;\n","import _ from './TransferRecordTable'\nexport default _;\nexport * from './TransferRecordTable'\n","import React, {FC, useReducer, Suspense} from 'react';\nimport './App.css';\nimport {getInitialState, rootReducer} from \"../store\";\nimport {Menu} from '../components';\nimport {Container, Dimmer, Loader} from \"semantic-ui-react\";\nimport {Section, useSectionManager} from \"../utils\";\n\nconst HolderCRUD = React.lazy(() => import('../views/HolderCRUD'));\nconst AssetCRUD = React.lazy(() => import('../views/AssetCRUD'));\nconst TransferRecordTable = React.lazy(() => import('../components/TransferRecordTable'));\n\nconst SuspenseLoader: FC = () => (\n  <Dimmer active>\n    <Loader size='massive'/>\n  </Dimmer>\n);\n\nexport const App: FC = () => {\n  const initialState = getInitialState();\n  const [{assets, holders, records}, dispatch] = useReducer(rootReducer, initialState);\n  const [section, handlers] = useSectionManager();\n\n  return (\n    <>\n      <Menu section={section} handlers={handlers}/>\n      <Container className={'main'}>\n\n        <Suspense\n          fallback={<SuspenseLoader/>}\n        >\n          {section === Section.Holders &&\n          <HolderCRUD\n            assets={assets}\n            records={records}\n            holders={holders}\n            dispatch={dispatch}\n          />\n          }\n        </Suspense>\n\n        <Suspense\n          fallback={<SuspenseLoader/>}\n        >\n          {section === Section.Assets &&\n          <AssetCRUD\n            records={records}\n            assets={assets}\n            holders={holders}\n            dispatch={dispatch}\n          />\n          }\n        </Suspense>\n\n        <Suspense\n          fallback={<SuspenseLoader/>}\n        >\n          {section === Section.TransferRecords &&\n          <TransferRecordTable\n            assets={assets}\n            holders={holders}\n            records={records}\n          />\n          }\n        </Suspense>\n\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import x from './App';\nexport default x;\nexport * from './App';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {FC} from \"react\";\nimport {Button} from \"semantic-ui-react\";\n\nexport interface FormButton {\n  editMode?: boolean\n}\n\nexport const FormButton: FC<FormButton> = ({editMode}) =>\n  <Button\n    color={editMode ? \"blue\" :\"green\"}\n    type='submit'>\n    {editMode ? 'Save' : 'Create'}\n  </Button>;\n"],"sourceRoot":""}