{"version":3,"sources":["store/actions.ts","services/StoreService.ts","constants.ts","store/data.ts","utils/dataHelper.ts","utils/sectionHandler.ts","utils/index.ts","store/sortStore.ts","entities.ts","store/reducer.ts","components/FormButton.tsx","components/AssetForm/AssetForm.tsx","components/BackButton.tsx","components/HolderForm/HolderForm.tsx","components/HolderTable/HolderTable.tsx","components/TransferRecordTable/TransferRecordTable.tsx","components/Menu.tsx","views/AssetCRUD.tsx","views/HolderCRUD.tsx","App/index.ts","App/App.tsx","store/initialState.ts","serviceWorker.ts","index.tsx"],"names":["Actions","StoreService","Object","freeze","get","itemName","item","localStorage","getItem","numPatt","RegExp","jsonPatt","test","JSON","parse","parseFloat","set","setItem","stringify","toString","remove","removeItem","NAMESPACE","store","assets","holders","records","mapToID","x","values","reduce","acc","y","objectSpread","defineProperty","id","sortBy","prop","desc","arguments","length","undefined","sort","_ref","_ref2","aLabel","bLabel","toLowerCase","Section","sortByName","sortByDateDesc","onChangeFormFieldHandler","state","setState","event","_ref4","name","value","checked","preventDefault","goToGenerator","section","setSection","exec","initialData","_len","rest","Array","_key","fn","sortStore","generateAsset","asset","uuid4","createDate","Date","toISOString","notes","blocked","serial","assignedTo","updateDate","cache","rootReducer","action","fromHolderId","toHolderId","assetId","holder","type","payload","UPSERT_HOLDER","uuid","UPSERT_ASSET","hasOwnProperty","from","to","concat","date","REPLACE_ALL","UPDATE_ALL","DELETE_ALL","reducer","FormButton","editMode","react_default","a","createElement","Button","color","initialState","AssetForm","_Component","_getPrototypeOf2","_this","classCallCheck","this","args","possibleConstructorReturn","getPrototypeOf","call","apply","props","options","key","text","map","_ref3","onChangeHandler","onSubmit","e","inherits","createClass","Fragment","Form","Input","required","onChange","placeholder","label","TextArea","Checkbox","Select","fluid","search","FormButton_FormButton","Component","BackButton","onClick","Icon","HolderForm","HolderTable","Table","celled","selectable","Header","Row","HeaderCell","Body","data-id","Cell","TransferRecordTable","Menu","handlers","Menu_Menu","icon","stackable","Item","active","Assets","goToAssets","Holders","goToHolders","TransferRecords","gotoTransferRecords","AssetCRUD","dispatch","_useState","useState","_useState2","slicedToArray","editionMode","setEditionMode","_useState3","_useState4","currentAsset","setCurrentAsset","onClickAsset","dataset","currentTarget","console","log","history","filter","Segment","BackButton_BackButton","AssetForm_AssetForm","TransferRecordTable_TransferRecordTable","List","divided","relaxed","Content","HolderCRUD","currentHolder","setCurrentHolder","h","HolderForm_HolderForm","HolderTable_HolderTable","getInitialState","_useReducer","useReducer","_useReducer2","_useReducer2$","_useSectionManager","initialSection","useSectionManager","_useSectionManager2","components_Menu_Menu","Container","className","HolderCRUD_HolderCRUD","AssetCRUD_AssetCRUD","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uLAEYA,yOCFL,IAAMC,EAAeC,OAAOC,OAAO,CACxCC,IADwC,SACpCC,GACF,IAAMC,EAAOC,aAAaC,QAAQH,GAC5BI,EAAU,IAAIC,OAAO,SACrBC,EAAW,IAAID,OAAO,eAE5B,OAAGJ,EACEK,EAASC,KAAKN,GACRO,KAAKC,MAAMR,GAEZG,EAAQG,KAAKN,GACZS,WAAWT,GAGXA,OAIT,GAKJU,IAvBwC,SAuBpCX,EAAkBC,GACD,kBAATA,EACRC,aAAaU,QAAQZ,EAAUQ,KAAKK,UAAUZ,IAE9CC,aAAaU,QAAQZ,EAAUC,EAAKa,aAIxCC,OA/BwC,SA+BjCf,GACLE,aAAac,WAAWhB,MChCfiB,EAAY,iBCEZC,EAAe,CAC1BC,OAAQ,GACRC,QAAS,GACTC,QAAS,oBCFJ,SAASC,EAAkCC,GAChD,OAAO1B,OAAO2B,OAAOD,GAAGE,OAAO,SAACC,EAAKC,GAAN,OAAA9B,OAAA+B,EAAA,EAAA/B,CAAA,GAAiB6B,EAAjB7B,OAAAgC,EAAA,EAAAhC,CAAA,GAAuB8B,EAAEG,GAAKH,KAAK,IAG7D,SAASI,EAAOC,GAA4B,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjD,OAAO,SAACX,GAAD,OACLA,EAAEc,KAAK,SAAAC,EAAAC,GAAA,IACoBC,EADpBF,EACHN,GACuBS,EAFpBF,EAEHP,GAFG,OAIHQ,EAAOE,cAAgBD,EAAOC,cACzBT,EAAO,GAAK,EACbO,EAAOE,cAAgBD,EAAOC,cAC7BT,GAAQ,EAAI,EACb,KAIL,ICnBKU,EDmBCC,EAAab,EAAO,QAEpBc,GADgBd,EAAO,QACNA,EAAO,QAAQ,IAkBtC,SAASe,EACfC,EAAUC,GACT,OAAO,SAACC,EAADC,GAAyC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,QAC9BJ,EAAMK,iBACNN,EAASnD,OAAAgC,EAAA,EAAAhC,CAAA,GAAEsD,OAAmBf,IAAZiB,EAAwBA,EAAUD,KCrCxD,SAASG,EAAcC,EAAkBC,GACvC,OAAO,WACLA,EAAWD,cARHb,0FCqBL,SAASe,EAAKC,GAAuC,QAAAC,EAAA1B,UAAAC,OAAlB0B,EAAkB,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAlBF,EAAkBE,EAAA,GAAA7B,UAAA6B,GAC1D,OAAOF,EAAKpC,OAAO,SAACC,EAAKsC,GAAN,OAAaA,EAAGtC,IAAMiC,GCrBpC,SAASM,EAAT3B,GAA6D,IAAzCnB,EAAyCmB,EAAzCnB,OAAQC,EAAiCkB,EAAjClB,QAASC,EAAwBiB,EAAxBjB,QAC1C,MAAO,CACLF,OAAQuC,EAAK7D,OAAO2B,OAAOL,GAASyB,EAAYtB,GAChDF,QAASsC,EAAK7D,OAAO2B,OAAOJ,GAAUwB,EAAYtB,GAClDD,QAASwB,EAAexB,yBCJrB,SAAS6C,EAAcC,GAC5B,OAAOtE,OAAA+B,EAAA,EAAA/B,CAAA,CACLiC,GAAIsC,MACJC,YAAa,IAAIC,MAAQC,cACzBpB,KAAM,GACNqB,MAAO,GACPC,SAAS,EACTC,OAAQ,GACRC,YAAY,GACTR,EARL,CASES,YAAa,IAAIN,MAAQC,gBCsD7B,IAAMM,EAAQ,SAACtD,GAEb,OADA3B,EAAae,IAAIM,EAAWM,GACrBA,GAGF,SAASuD,EAAY/B,EAAcgC,GACxC,OAAOrB,EAhET,SAAiBX,EAAjBT,GAA+D,IDqB9D0C,EAAsBC,EAAoBC,EAbZC,ECRCC,EAA+B9C,EAA/B8C,KAAMC,EAAyB/C,EAAzB+C,QACpC,OAAQD,GACN,KAAKzF,EAAQ2F,cACX,IAAMxD,EAAMuD,EAAmBvD,IAAMyD,MACrC,OAAO1F,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EADL,CAEE3B,QAAQvB,OAAA+B,EAAA,EAAA/B,CAAA,GACHkD,EAAM3B,QADJvB,OAAAgC,EAAA,EAAAhC,CAAA,GAEJiC,GDAoBqD,ECAAtF,OAAA+B,EAAA,EAAA/B,CAAA,CAACiC,MAAOuD,GDC9BxF,OAAA+B,EAAA,EAAA/B,CAAA,CACLiC,GAAIsC,MACJC,YAAa,IAAIC,MAAQC,cACzBpB,KAAM,MACNqB,MAAO,GACPC,SAAS,GACNU,EANL,CAOEP,YAAa,IAAIN,MAAQC,qBCJzB,KAAK5E,EAAQ6F,aACX,IAAM1D,EAAMuD,EAAkBvD,IAAMyD,MACpC,GAAKF,EAA2BI,eAAe,QAAS,KAAAlD,EACvB8C,EAAxBK,EAD+CnD,EAC/CmD,KAAUf,EADqCpC,EACzCoD,GACb,OAAO9F,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EADL,CAEE1B,QAAS0B,EAAM1B,QACZuE,QDEZZ,ECFkCU,EDEZT,ECF4BN,EDERO,ECF8BpD,EDGhE,CACLA,GAAIsC,MACJyB,MAAO,IAAIvB,MAAQC,cACnBmB,KAAMV,EACNW,GAAIV,EACJd,MAAOe,KCPD/D,OAAOtB,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EAAM5B,OADLtB,OAAAgC,EAAA,EAAAhC,CAAA,GAEHiC,EAAKoC,EAAcrE,OAAA+B,EAAA,EAAA/B,CAAA,CAACiC,KAAI6C,cAAeU,QAI5C,OAAOxF,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EADL,CAEE5B,OAAOtB,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EAAM5B,OADLtB,OAAAgC,EAAA,EAAAhC,CAAA,GAEHiC,EAAKoC,EAAcrE,OAAA+B,EAAA,EAAA/B,CAAA,CAACiC,MAAOuD,QAMpC,KAAK1F,EAAQmG,YACX,OAAOT,EAET,KAAK1F,EAAQoG,WACX,OAAOlG,OAAA+B,EAAA,EAAA/B,CAAA,GACFkD,EACAsC,GAGP,KAAK1F,EAAQqG,WAEX,OADApG,EAAamB,OAAOE,GACb,CACLE,OAAQ,GACRC,QAAS,GACTC,QAAS,IAGb,QACE,OAAO0B,GAWTkD,CAAQlD,EAAOgC,GACfd,EACAY,iECrESqB,EAA6B,SAAA5D,GAAA,IAAE6D,EAAF7D,EAAE6D,SAAF,OACxCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAOL,EAAW,OAAQ,QAC1Bf,KAAK,UACJe,EAAW,OAAS,WCEnBM,EAAe,CACnBtD,KAAM,GACNqB,MAAO,GACPC,SAAS,EACTC,OAAQ,GACRC,YAAY,GAGD+B,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EPY0BtF,EOZ1B1B,OAAAiH,EAAA,EAAAjH,CAAAkH,KAAAL,GAAA,QAAA9C,EAAA1B,UAAAC,OAAA6E,EAAA,IAAAlD,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiD,EAAAjD,GAAA7B,UAAA6B,GAAA,OAAA8C,EAAAhH,OAAAoH,EAAA,EAAApH,CAAAkH,MAAAH,EAAA/G,OAAAqH,EAAA,EAAArH,CAAA6G,IAAAS,KAAAC,MAAAR,EAAA,CAAAG,MAAAnB,OAAAoB,MACEb,cAAgC/D,IAArByE,EAAKQ,MAAMlD,MADxB0C,EAEE9D,MAAQ8D,EAAKV,SACTU,EAAKQ,MAAMlD,MACXsC,EAJNI,EAOES,SPKwB/F,EOLJsF,EAAKQ,MAAMjG,QPMxB,CACL,CAACmG,IAAK,OAAQC,KAAM,OAAQpE,OAAO,IACnCwC,OAAO/F,OAAO2B,OAAOD,GAAGkG,IACxB,SAAAC,GAAA,IAAE5F,EAAF4F,EAAE5F,GAAF,MAAiB,CAACyF,IAAKzF,EAAI0F,KAA3BE,EAAMvE,KAAiCC,MAAOtB,OOhBlD+E,EASEc,gBAAkB7E,EAChB+D,EAAK9D,MACL,SAACxB,GACCsF,EAAK7D,SAASzB,KAZpBsF,EAgBEe,SAA6B,SAACC,GAC5BA,EAAEvE,iBACF,IAAMoC,EAAOmB,EAAKV,SACdU,EAAKQ,MAAMlD,MAAOQ,WAClB,KAEAe,IAASmB,EAAK9D,MAAM4B,WACtBkC,EAAKQ,MAAMO,SAASf,EAAK9D,OAEzB8D,EAAKQ,MAAMO,SAAX/H,OAAA+B,EAAA,EAAA/B,CAAA,GACOgH,EAAK9D,MADZ,CAEI2C,OACAC,GAAIkB,EAAK9D,MAAM4B,cAKhBkC,EAAKV,UACRU,EAAK7D,SAASyD,IAlCpBI,EAAA,OAAAhH,OAAAiI,EAAA,EAAAjI,CAAA6G,EAAAC,GAAA9G,OAAAkI,EAAA,EAAAlI,CAAA6G,EAAA,EAAAa,IAAA,SAAAnE,MAAA,WAwCI,OACEgD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAML,SAAUb,KAAKa,UACnBxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAKC,MAAN,CACE/E,KAAK,OACLC,MAAO2D,KAAKhE,MAAMI,KAClBgF,UAAQ,EACRC,SAAUrB,KAAKY,gBACfU,YAAY,YACZC,MAAM,cAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKM,SAAN,CACEpF,KAAK,QACLC,MAAO2D,KAAKhE,MAAMyB,MAClB4D,SAAUrB,KAAKY,gBACfU,YAAY,eACZC,MAAM,UAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKO,SAAN,CACErF,KAAK,UACLE,QAAS0D,KAAKhE,MAAM0B,QACpB2D,SAAUrB,KAAKY,gBACfW,MAAM,YAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKC,MAAN,CACE/E,KAAK,SACLgF,UAAQ,EACR/E,MAAO2D,KAAKhE,MAAM2B,OAClB0D,SAAUrB,KAAKY,gBACfU,YAAY,mBACZC,MAAM,kBAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKQ,OAAN,CACEC,OAAK,EACLvF,KAAK,aACLmF,MAAM,SACNhB,QAASP,KAAKO,QACde,YAAY,SACZM,QAAM,EACNP,SAAUrB,KAAKY,gBACfvE,MAAO2D,KAAKhE,MAAM4B,aAEpByB,EAAAC,EAAAC,cAACsC,EAAD,CAAYzC,SAAUY,KAAKZ,iBAlFrCO,EAAA,CAA+BmC,uCCflBC,EAAkC,SAAAxG,GAAA,IAAEyG,EAAFzG,EAAEyG,QAAF,OAC7C3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAM7F,KAAM,eAAgB4F,QAASA,KCIjCtC,EAAe,CACnBtD,KAAM,GACNqB,MAAO,GACPC,SAAS,GAGEwE,EAAb,SAAAtC,GAAA,SAAAsC,IAAA,IAAArC,EAAAC,EAAAhH,OAAAiH,EAAA,EAAAjH,CAAAkH,KAAAkC,GAAA,QAAArF,EAAA1B,UAAAC,OAAA6E,EAAA,IAAAlD,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiD,EAAAjD,GAAA7B,UAAA6B,GAAA,OAAA8C,EAAAhH,OAAAoH,EAAA,EAAApH,CAAAkH,MAAAH,EAAA/G,OAAAqH,EAAA,EAAArH,CAAAoJ,IAAA9B,KAAAC,MAAAR,EAAA,CAAAG,MAAAnB,OAAAoB,MACEb,cAAiC/D,IAAtByE,EAAKQ,MAAMlC,OADxB0B,EAEE9D,MAAQ8D,EAAKV,SACTU,EAAKQ,MAAMlC,OACXsB,EAJNI,EAMEc,gBAAkB7E,EAChB+D,EAAK9D,MACL,SAACxB,GACCsF,EAAK7D,SAASzB,KATpBsF,EAaEe,SAA6B,SAACC,GAC5BA,EAAEvE,iBACFuD,EAAKQ,MAAMO,SAASf,EAAK9D,OAEpB8D,EAAKV,UACRU,EAAK7D,SAASyD,IAlBpBI,EAAA,OAAAhH,OAAAiI,EAAA,EAAAjI,CAAAoJ,EAAAtC,GAAA9G,OAAAkI,EAAA,EAAAlI,CAAAoJ,EAAA,EAAA1B,IAAA,SAAAnE,MAAA,WAuBI,OACIgD,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAML,SAAUb,KAAKa,UACnBxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAKC,MAAN,CACE/E,KAAK,OACLC,MAAO2D,KAAKhE,MAAMI,KAClBiF,SAAUrB,KAAKY,gBACfU,YAAY,YACZC,MAAM,cAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKM,SAAN,CACEpF,KAAK,QACLC,MAAO2D,KAAKhE,MAAMyB,MAClB4D,SAAUrB,KAAKY,gBACfU,YAAY,eACZC,MAAM,UAERlC,EAAAC,EAAAC,cAAC2B,EAAA,EAAKO,SAAN,CACErF,KAAK,UACLE,QAAS0D,KAAKhE,MAAM0B,QACpB2D,SAAUrB,KAAKY,gBACfW,MAAM,YAERlC,EAAAC,EAAAC,cAACsC,EAAD,CAAYzC,SAAUY,KAAKZ,gBA7CrC8C,EAAA,CAAgCJ,sBCRnBK,EAAoC,SAAA5G,GAAA,IAAElB,EAAFkB,EAAElB,QAAS2H,EAAXzG,EAAWyG,QAAX,OAC/C3C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACtBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMG,OAAP,KACElD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMI,IAAP,KACEnD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,aACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,eACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,gBAIJpD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMM,KAAP,KACI5J,OAAO2B,OAAOJ,GAASqG,IAAI,SAAAlF,GAAA,IAAEY,EAAFZ,EAAEY,KAAMqB,EAARjC,EAAQiC,MAAOC,EAAflC,EAAekC,QAAS3C,EAAxBS,EAAwBT,GAAxB,OAC3BsE,EAAAC,EAAAC,cAAC6C,EAAA,EAAMI,IAAP,CAAWhC,IAAKzF,EAAI4H,UAAS5H,EAAIiH,QAASA,GACxC3C,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAaxG,GACbiD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAalF,EAAU,UAAY,UACnC2B,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAanF,SCdVoF,EAAoD,SAAAtH,GAAA,IAAElB,EAAFkB,EAAElB,QAASD,EAAXmB,EAAWnB,OAAQE,EAAnBiB,EAAmBjB,QAAnB,OAC/D+E,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACtBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMG,OAAP,KACElD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMI,IAAP,KACEnD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,aACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,cACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,qBACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,aACApD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMK,WAAP,aAIJpD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMM,KAAP,KACIpI,EAAQoG,IAAI,SAAAlF,GAAA,IAAET,EAAFS,EAAET,GAAIqC,EAAN5B,EAAM4B,MAAO0B,EAAbtD,EAAasD,KAAMH,EAAnBnD,EAAmBmD,KAAMC,EAAzBpD,EAAyBoD,GAAzB,OACZS,EAAAC,EAAAC,cAAC6C,EAAA,EAAMI,IAAP,CAAWhC,IAAKzF,EAAI4H,UAAS5H,GAC3BsE,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAa9D,GACbO,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAaxI,EAAOgD,GAAOhB,MAC3BiD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAaxI,EAAOgD,GAAOO,QAC3B0B,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAcvI,EAAQsE,IAAmBtE,EAAQsE,GAAgBvC,MACjEiD,EAAAC,EAAAC,cAAC6C,EAAA,EAAMQ,KAAP,KAAcvI,EAAQuE,IAAiBvE,EAAQuE,GAAcxC,qBCpB1D0G,EAAsB,SAAAvH,GAAA,IAAEkB,EAAFlB,EAAEkB,QAASsG,EAAXxH,EAAWwH,SAAX,OACjC1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAcC,KAAK,UAAUC,WAAS,GACpC7D,EAAAC,EAAAC,cAACyD,EAAA,EAAaG,KAAd,CACE/G,KAAK,YACLgH,OAAQ3G,IAAYb,EAAQyH,OAC5BrB,QAASe,EAASO,YAElBjE,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAM7F,KAAK,cALb,UASAiD,EAAAC,EAAAC,cAACyD,EAAA,EAAaG,KAAd,CACE/G,KAAK,OACLgH,OAAQ3G,IAAYb,EAAQ2H,QAC5BvB,QAASe,EAASS,aAElBnE,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAM7F,KAAK,SALb,WASAiD,EAAAC,EAAAC,cAACyD,EAAA,EAAaG,KAAd,CACE/G,KAAK,UACLgH,OAAQ3G,IAAYb,EAAQ6H,gBAC5BzB,QAASe,EAASW,qBAElBrE,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAM7F,KAAK,YALb,aCbG,IAAMuH,EAAgC,SAAAnI,GAA0C,IAJxDT,EAIgBX,EAAwCoB,EAAxCpB,OAAQC,EAAgCmB,EAAhCnB,QAASC,EAAuBkB,EAAvBlB,QAASsJ,EAAcpI,EAAdoI,SACjE/C,EAAW,SAACvB,GAChBsE,EAAS,CAACvF,KAAMzF,EAAQ6F,aAAcH,QAASgB,KAFoCuE,EAK/CC,oBAAS,GALsCC,EAAAjL,OAAAkL,EAAA,EAAAlL,CAAA+K,EAAA,GAK9EI,EAL8EF,EAAA,GAKjEG,EALiEH,EAAA,GAAAI,EAM7CL,mBAAS,IANoCM,EAAAtL,OAAAkL,EAAA,EAAAlL,CAAAqL,EAAA,GAM9EE,EAN8ED,EAAA,GAMhEE,EANgEF,EAAA,GAQ/EG,EACJ,SAAAzD,GACEA,EAAEvE,iBADC,IAEoBiI,EAAY1D,EAA5B2D,cAAgBD,QAEnBA,EAAQzJ,KACV2J,QAAQC,IAAIvK,EAAOoK,EAAQzJ,KAC3BuJ,EAAgBE,EAAQzJ,IACxBmJ,GAAe,KAQfU,EAAUtK,EACbuK,QA7B0B9J,EA6BGsJ,EA5BzB,SAAA9I,GAAA,OAAAA,EAAE6B,QAAqCrC,KA8B9C,OAAOkJ,EACL5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,CAAY/C,QAVE,WAClBkC,GAAe,MAUX7E,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACyF,EAAD,CAAW3K,QAASA,EAASwG,SAAUA,EAAUzD,MAAOhD,EAAOiK,MAEhEO,EAAQxJ,QACTiE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAA,UAAKnF,EAAOiK,GAAcjI,KAA1B,YACAiD,EAAAC,EAAAC,cAAC0F,EAAD,CACE5K,QAASA,EACTD,OAAQA,EACRE,QAASsK,MAMfvF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACyF,EAAD,CAAW3K,QAASA,EAASwG,SAAUA,KAEzCxB,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,GAEjBtM,OAAO2B,OAAOL,GAAQyK,OAAO,SAAArK,GAAC,OAAKA,EAAEoD,aAAY8C,IAAI,SAAAC,GAAA,IAAEvE,EAAFuE,EAAEvE,KAAMrB,EAAR4F,EAAQ5F,GAAI6C,EAAZ+C,EAAY/C,WAAZ,OACnDyB,EAAAC,EAAAC,cAAC2F,EAAA,EAAK/B,KAAN,CAAW3C,IAAKzF,EAAIiH,QAASuC,EAAc5B,UAAS5H,GAClDsE,EAAAC,EAAAC,cAAC2F,EAAA,EAAKG,QAAN,KACEhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAK3C,OAAN,KAAcnG,GACS,kBAAfwB,EAAP,eAAAiB,OAAgDxE,EAAQuD,GAAYxB,MAAS,YAKxFiD,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,GAEjBtM,OAAO2B,OAAOL,GAAQyK,OAAO,SAAArK,GAAC,OAAIA,EAAEoD,aAAY8C,IAAI,SAAAvE,GAAA,IAAEC,EAAFD,EAAEC,KAAMrB,EAARoB,EAAQpB,GAAI6C,EAAZzB,EAAYyB,WAAZ,OAClDyB,EAAAC,EAAAC,cAAC2F,EAAA,EAAK/B,KAAN,CAAW3C,IAAKzF,EAAIiH,QAASuC,EAAc5B,UAAS5H,GAClDsE,EAAAC,EAAAC,cAAC2F,EAAA,EAAKG,QAAN,KACEhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAK3C,OAAN,KAAcnG,GACS,kBAAfwB,EAAP,eAAAiB,OAAgDxE,EAAQuD,GAAYxB,MAAS,eCxEzF,IAAMkJ,EACX,SAAA/J,GAA0C,IALbR,EAK3BV,EAAwCkB,EAAxClB,QAASC,EAA+BiB,EAA/BjB,QAASF,EAAsBmB,EAAtBnB,OAAQwJ,EAAcrI,EAAdqI,SAAcC,EACFC,oBAAS,GADPC,EAAAjL,OAAAkL,EAAA,EAAAlL,CAAA+K,EAAA,GACjCI,EADiCF,EAAA,GACpBG,EADoBH,EAAA,GAAAI,EAEEL,mBAAS,IAFXM,EAAAtL,OAAAkL,EAAA,EAAAlL,CAAAqL,EAAA,GAEjCoB,EAFiCnB,EAAA,GAElBoB,EAFkBpB,EAAA,GAIlCvD,EAAW,SAAC4E,GAChB7B,EAAS,CAACvF,KAAMzF,EAAQ2F,cAAeD,QAASmH,KAmB5Cb,EAAUtK,EACbuK,QA9BwB9J,EA8BKwK,EA7B3B,SAAC/K,GAAD,OAAuBA,EAAEmE,OAAS5D,GAAMP,EAAEoE,KAAO7D,KA+BtD,OACEsE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACGgD,EAEC5E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,CAAY/C,QAbF,WAClBkC,GAAe,MAaP7E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACmG,EAAD,CAAY7E,SAAUA,EAAUzC,OAAQ/D,EAAQkL,QAE/CX,EAAQxJ,QACXiE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAA,UAAKlF,EAAQkL,GAAenJ,KAA5B,YACAiD,EAAAC,EAAAC,cAAC0F,EAAD,CACE5K,QAASA,EACTD,OAAQA,EACRE,QAASsK,MAMfvF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACmG,EAAD,CAAY7E,SAAUA,KAGxBxB,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACoG,EAAD,CACEtL,QAASA,EACT2H,QAjDV,SAAAlB,GACEA,EAAEvE,iBADC,IAEoBiI,EAAY1D,EAA5B2D,cAAgBD,QAEnBA,EAAQzJ,KACVyK,EAAiBhB,EAAQzJ,IACzBmJ,GAAe,oBC9BV1J,ECOQ,WACrB,IAAMkF,ECHD,WACL,IAAM5B,EAAQjF,EAAaG,IAAIkB,GAC/B,OAAM4D,GAGGZ,EAAU/C,GDFEyL,GADMC,EAEoBC,qBAAW/H,EAAa2B,GAF5CqG,EAAAjN,OAAAkL,EAAA,EAAAlL,CAAA+M,EAAA,GAAAG,EAAAD,EAAA,GAEnB3L,EAFmB4L,EAEnB5L,OAAQC,EAFW2L,EAEX3L,QAASC,EAFE0L,EAEF1L,QAAUsJ,EAFRmC,EAAA,GAAAE,EfYtB,WAAuF,IAA5DC,EAA4D/K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3CS,EAAQyH,OAAmCQ,EAC9DC,mBAASoC,GADqDnC,EAAAjL,OAAAkL,EAAA,EAAAlL,CAAA+K,EAAA,GACrFpH,EADqFsH,EAAA,GAC5ErH,EAD4EqH,EAAA,GAE5F,MAAO,CACLtH,EACA,CACEiH,oBAAqBlH,EAAcZ,EAAQ6H,gBAAiB/G,GAC5D8G,YAAahH,EAAcZ,EAAQ2H,QAAS7G,GAC5C4G,WAAY9G,EAAcZ,EAAQyH,OAAQ3G,KehBlByJ,GAHDC,EAAAtN,OAAAkL,EAAA,EAAAlL,CAAAmN,EAAA,GAGpBxJ,EAHoB2J,EAAA,GAGXrD,EAHWqD,EAAA,GAK3B,OACE/G,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAAC8G,EAAD,CAAM5J,QAASA,EAASsG,SAAUA,IAClC1D,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAWC,UAAW,QAEnB9J,IAAYb,EAAQ2H,SACrBlE,EAAAC,EAAAC,cAACiH,EAAD,CACEpM,OAAQA,EACRE,QAASA,EACTD,QAASA,EACTuJ,SAAUA,IAGXnH,IAAYb,EAAQyH,QACrBhE,EAAAC,EAAAC,cAACkH,EAAD,CACEnM,QAASA,EACTF,OAAQA,EACRC,QAASA,EACTuJ,SAAUA,IAGXnH,IAAYb,EAAQ6H,iBACrBpE,EAAAC,EAAAC,cAAC0F,EAAD,CACE7K,OAAQA,EACRC,QAASA,EACTC,QAASA,OE1BboM,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzL,QACfmL,UAAUC,cAAcQ,YAI1BlD,QAAQC,IACN,iHAKEuC,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB7C,QAAQC,IAAI,sCAGRuC,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,UAO5BQ,MAAM,SAAAC,GACLtD,QAAQsD,MAAM,4CAA6CA,KCjGjEC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SDoB1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAImB,IACnBC,YACD3B,OAAOC,SAAS2B,MAEJC,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAApI,OAAM0J,YAAN,sBAEP7B,GAgEV,SAAiCO,EAAeC,GAE9CyB,MAAM1B,GACHK,KAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQ9P,IAAI,gBAEnB,MAApB4P,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BV,OAAOC,SAASsC,aAKpBnC,GAAgBC,EAAOC,KAG1Ba,MAAM,WACLrD,QAAQC,IACN,mEArFAyE,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,KAAK,WACjC5C,QAAQC,IACN,gHAMJqC,GAAgBC,EAAOC,MC9C/BE","file":"static/js/main.bd059f1f.chunk.js","sourcesContent":["import {Asset, Store} from \"../types\";\n\nexport enum Actions {\n  UPSERT_ASSET = 'UPSERT_ASSET',\n  UPSERT_HOLDER = 'UPSERT_HOLDER',\n  UPDATE_ALL = 'UPDATE_ALL',\n  REPLACE_ALL = 'REPLACE_ALL',\n  DELETE_ALL = 'DELETE_ALL'\n}\n\nexport interface TransferPayload extends Asset{\n  from: string\n  to: string\n}\n\nexport type Payload =\n  Partial<TransferPayload> |\n  Store\n\nexport interface Action {\n  type: Actions,\n  payload?: Payload\n}\n","export const StoreService = Object.freeze({\n  get(itemName: string) {\n    const item = localStorage.getItem(itemName);\n    const numPatt = new RegExp(/^\\d+$/);\n    const jsonPatt = new RegExp(/[[{].*[}\\]]/);\n\n    if(item){\n      if(jsonPatt.test(item)){\n        return JSON.parse(item);\n      }\n      else if(numPatt.test(item)) {\n        return parseFloat(item);\n      }\n      else {\n        return item;\n      }\n    }\n    else {\n      return undefined;\n    }\n\n  },\n\n  set(itemName: string, item: object | string | number | any[]) {\n    if(typeof item === \"object\"){\n      localStorage.setItem(itemName, JSON.stringify(item));\n    } else {\n      localStorage.setItem(itemName, item.toString());\n    }\n  },\n\n  remove(itemName: string) {\n    localStorage.removeItem(itemName);\n  }\n});","export const NAMESPACE = 'bizenter@store';\n","import {Store} from \"../types\";\n\nexport const store: Store = {\n  assets: {},\n  holders: {},\n  records: []\n} as Store;\n","import {Entity, Holder, SelectOption} from \"../types\";\nimport {SyntheticEvent} from \"react\";\n\nexport function mapToID<T extends { id: string }>(x: T[]): Record<string, T> {\n  return Object.values(x).reduce((acc, y) => ({...acc, [y.id]: y}), {})\n}\n\nexport function sortBy(prop: string, desc = false) {\n  return (x: Entity[]) =>\n    x.sort((\n      {[prop as keyof Entity]: aLabel},\n      {[prop as keyof Entity]: bLabel}\n      ) =>\n        aLabel.toLowerCase() < bLabel.toLowerCase()\n          ? (desc ? 1 : -1)\n          : aLabel.toLowerCase() > bLabel.toLowerCase()\n          ? (desc ? -1 : 1)\n          : 0\n    )\n}\n\nexport const sortByName = sortBy('name');\nexport const sortByDateAsc = sortBy('date');\nexport const sortByDateDesc = sortBy('date', true);\n\nfunction removeById(id: string) {\n  return <T extends { id: string }>(x: T) => x.id !== id\n}\n\nexport function filterById(id: string) {\n  return <T extends Entity>(x: T[]) => x.filter(removeById(id))\n}\n\nexport function toOptions(x: Record<string, Holder>): SelectOption[] {\n  return [\n    {key: 'free', text: 'Free', value: false} as SelectOption\n  ].concat(Object.values(x).map(\n    ({id, name}) => ({key: id, text: name, value: id})\n  ));\n}\n\nexport function onChangeFormFieldHandler<T, E extends SyntheticEvent, D extends { [key: string]: string }>\n(state: T, setState: (x: any) => void) {\n  return (event: E, {name, value, checked}: D) => {\n    event.preventDefault();\n    setState({[name]: checked !== undefined ? checked : value})\n  }\n}\n\n","import {useState} from 'react';\n\nexport enum Section {\n  TransferRecords = 'TRANSFER_RECORDS',\n  Holders = 'HOLDERS',\n  Assets = 'ASSETS'\n}\n\nfunction goToGenerator(section: Section, setSection: Function){\n  return () => {\n    setSection(section)\n  };\n}\n\nexport interface SectionHandlers {\n  gotoTransferRecords: () => void,\n  goToHolders: () => void,\n  goToAssets: () => void\n}\n\nexport function useSectionManager(initialSection = Section.Assets): [Section, SectionHandlers]{\n  const [section, setSection] = useState(initialSection);\n  return [\n    section,\n    {\n      gotoTransferRecords: goToGenerator(Section.TransferRecords, setSection),\n      goToHolders: goToGenerator(Section.Holders, setSection),\n      goToAssets: goToGenerator(Section.Assets, setSection)\n    }\n  ];\n}\n","export * from './dataHelper';\nexport * from './sectionHandler';\n\nexport const copyToClipboard = (str: string) => {\n  const el = document.createElement('textarea');\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  const selected =\n    document.getSelection()!.rangeCount > 0\n      ? document.getSelection()!.getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection()!.removeAllRanges();\n    document.getSelection()!.addRange(selected);\n  }\n};\n\nexport function exec(initialData: any, ...rest: Function[]) {\n  return rest.reduce((acc, fn) => fn(acc), initialData)\n}\n\nexport const isString = (x: any) => x instanceof String;\n","import {Store, TransferRecord} from \"../types\";\nimport {exec, mapToID, sortByDateDesc, sortByName} from \"../utils\";\n\nexport function sortStore({assets, holders, records}: Store): Store {\n  return {\n    assets: exec(Object.values(assets), sortByName, mapToID),\n    holders: exec(Object.values(holders), sortByName, mapToID),\n    records: sortByDateDesc(records) as TransferRecord[]\n  }\n}\n","import {Asset, Holder, TransferRecord} from \"./types\";\nimport uuid4 from 'uuid/v4';\n\nexport function generateAsset(asset: Partial<Asset>): Asset{\n  return {\n    id: uuid4(),\n    createDate: (new Date()).toISOString(),\n    name: '',\n    notes: '',\n    blocked: false,\n    serial: '',\n    assignedTo: false,\n    ...asset,\n    updateDate: (new Date()).toISOString(),\n  }\n}\n\nexport function generateHolder(holder: Partial<Holder>): Holder{\n  return {\n    id: uuid4(),\n    createDate: (new Date()).toISOString(),\n    name: 'meh',\n    notes: '',\n    blocked: false,\n    ...holder,\n    updateDate: (new Date()).toISOString(),\n  }\n}\n\nexport function generateRecord\n(fromHolderId: string, toHolderId: string, assetId: string): TransferRecord {\n  return {\n    id: uuid4(),\n    date: (new Date()).toISOString(),\n    from: fromHolderId,\n    to: toHolderId,\n    asset: assetId,\n  }\n}\n","import {Store, TransferRecord, Holder, Asset} from \"../types\";\nimport {Action, Actions} from \"./actions\";\nimport {exec} from \"../utils\";\nimport {StoreService} from \"../services\";\nimport {NAMESPACE} from \"../constants\";\nimport uuid from \"uuid/v4\";\nimport {generateAsset, generateHolder, generateRecord} from \"../entities\";\nimport {sortStore} from \"./sortStore\";\n\nfunction reducer(state: Store, {type, payload}: Action): Store {\n  switch (type) {\n    case Actions.UPSERT_HOLDER:{\n      const id = (payload as Holder).id || uuid();\n      return {\n        ...state,\n        holders: {\n          ...state.holders,\n          [id]: generateHolder({id, ...payload})\n        }\n      };\n    }\n    case Actions.UPSERT_ASSET:{\n      const id = (payload as Asset).id || uuid();\n      if ((payload as TransferRecord).hasOwnProperty('from')) {\n        const {from, to: assignedTo} = payload as TransferRecord;\n        return {\n          ...state,\n          records: state.records\n            .concat(generateRecord(from as string, assignedTo as string, id)),\n          assets: {\n            ...state.assets,\n            [id]: generateAsset({id, assignedTo, ...payload})\n          }\n        };\n      } else {\n        return {\n          ...state,\n          assets: {\n            ...state.assets,\n            [id]: generateAsset({id, ...payload})\n          }\n        };\n      }\n\n    }\n    case Actions.REPLACE_ALL: {\n      return payload as Store;\n    }\n    case Actions.UPDATE_ALL: {\n      return {\n        ...state,\n        ...payload as Store\n      };\n    }\n    case Actions.DELETE_ALL: {\n      StoreService.remove(NAMESPACE);\n      return {\n        assets: {},\n        holders: {},\n        records: []\n      } as Store;\n    }\n    default:\n      return state\n  }\n}\n\nconst cache = (x: Store) => {\n  StoreService.set(NAMESPACE, x);\n  return x;\n};\n\nexport function rootReducer(state: Store, action: Action): Store {\n  return exec(\n    reducer(state, action),\n    sortStore,\n    cache\n  );\n}\n","import React, {FC} from \"react\";\nimport {Button} from \"semantic-ui-react\";\n\nexport interface FormButton {\n  editMode?: boolean\n}\n\nexport const FormButton: FC<FormButton> = ({editMode}) =>\n  <Button\n    color={editMode ? \"blue\" :\"green\"}\n    type='submit'>\n    {editMode ? 'Save' : 'Create'}\n  </Button>;\n","import React, {Component, FormEventHandler} from \"react\";\nimport {Asset, Holder} from \"../../types\";\nimport {Form} from \"semantic-ui-react\";\nimport {onChangeFormFieldHandler, toOptions} from \"../../utils\";\nimport {TransferPayload} from \"../../store\";\nimport {FormButton} from \"../FormButton\";\n\nexport interface AssetFormProps {\n  asset?: Asset,\n  holders: Record<string, Holder>,\n  onSubmit: (x: Asset | TransferPayload) => void\n}\n\nconst initialState = {\n  name: '',\n  notes: '',\n  blocked: false,\n  serial: '',\n  assignedTo: false\n};\n\nexport class AssetForm extends Component<AssetFormProps, Asset> {\n  editMode = this.props.asset !== undefined;\n  state = this.editMode\n    ? this.props.asset as Asset\n    : initialState as Asset;\n\n\n  options = toOptions(this.props.holders);\n\n  onChangeHandler = onChangeFormFieldHandler(\n    this.state,\n    (x: Holder) => {\n      this.setState(x)\n    }\n  );\n\n  onSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    const from = this.editMode\n      ? this.props.asset!.assignedTo\n      : null;\n\n    if (from === this.state.assignedTo) {\n      this.props.onSubmit(this.state);\n    } else {\n      this.props.onSubmit({\n          ...this.state,\n          from,\n          to: this.state.assignedTo\n        } as TransferPayload\n      );\n    }\n\n    if (!this.editMode) {\n      this.setState(initialState)\n    }\n  };\n\n  render() {\n\n    return (\n      <>\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            name=\"name\"\n            value={this.state.name}\n            required\n            onChange={this.onChangeHandler}\n            placeholder='Full Name'\n            label='Full Name'\n          />\n          <Form.TextArea\n            name=\"notes\"\n            value={this.state.notes}\n            onChange={this.onChangeHandler}\n            placeholder='Observations'\n            label='Notes'\n          />\n          <Form.Checkbox\n            name=\"blocked\"\n            checked={this.state.blocked}\n            onChange={this.onChangeHandler}\n            label='Blocked'\n          />\n          <Form.Input\n            name=\"serial\"\n            required\n            value={this.state.serial}\n            onChange={this.onChangeHandler}\n            placeholder='LHG1L451G6L1GL41'\n            label='Serial Number'\n          />\n          <Form.Select\n            fluid\n            name=\"assignedTo\"\n            label='Holder'\n            options={this.options}\n            placeholder='Holder'\n            search\n            onChange={this.onChangeHandler}\n            value={this.state.assignedTo}\n          />\n          <FormButton editMode={this.editMode}/>\n        </Form>\n      </>\n    )\n  }\n}\n","import React, {FC} from 'react';\nimport {Button} from \"../types\";\nimport {Icon} from \"semantic-ui-react\";\n\nexport interface BackButtonProps extends Button {}\n\nexport const BackButton: FC<BackButtonProps> = ({onClick}) =>\n  <Icon name={'chevron left'} onClick={onClick}/>;\n","import React, {Component, FormEventHandler} from \"react\";\nimport {Holder} from \"../../types\";\nimport {Form} from \"semantic-ui-react\";\nimport {onChangeFormFieldHandler} from \"../../utils\";\nimport {FormButton} from \"../FormButton\";\n\nexport interface HolderFormProps {\n  holder?: Holder,\n  onSubmit: (h: any) => void\n}\n\nconst initialState = {\n  name: '',\n  notes: '',\n  blocked: false\n};\n\nexport class HolderForm extends Component<HolderFormProps, Holder> {\n  editMode = this.props.holder !== undefined;\n  state = this.editMode\n    ? this.props.holder as Holder\n    : initialState as Holder;\n\n  onChangeHandler = onChangeFormFieldHandler(\n    this.state,\n    (x: Holder) => {\n      this.setState(x)\n    }\n  );\n\n  onSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n\n    if (!this.editMode) {\n      this.setState(initialState);\n    }\n  };\n\n  render() {\n    return (\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onChangeHandler}\n            placeholder='Full Name'\n            label='Full Name'\n          />\n          <Form.TextArea\n            name=\"notes\"\n            value={this.state.notes}\n            onChange={this.onChangeHandler}\n            placeholder='Observations'\n            label='Notes'\n          />\n          <Form.Checkbox\n            name=\"blocked\"\n            checked={this.state.blocked}\n            onChange={this.onChangeHandler}\n            label='Blocked'\n          />\n          <FormButton editMode={this.editMode}/>\n        </Form>\n    )\n  }\n}\n","import React, {FC, MouseEventHandler} from \"react\";\nimport {Table} from \"semantic-ui-react\";\nimport {Holder} from \"../../types\";\n\nexport interface HolderTableProps {\n  holders: Record<string, Holder>,\n  onClick: MouseEventHandler\n}\n\nexport const HolderTable: FC<HolderTableProps> = ({holders, onClick}) => (\n  <Table celled selectable>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Name</Table.HeaderCell>\n        <Table.HeaderCell>Status</Table.HeaderCell>\n        <Table.HeaderCell>Notes</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      { Object.values(holders).map(({name, notes, blocked, id}) =>\n        <Table.Row key={id} data-id={id} onClick={onClick}>\n          <Table.Cell>{name}</Table.Cell>\n          <Table.Cell>{blocked ? 'Blocked' : 'Active'}</Table.Cell>\n          <Table.Cell>{notes}</Table.Cell>\n        </Table.Row>\n      )}\n    </Table.Body>\n  </Table>\n);\n\n\n","import React, {FC} from \"react\";\nimport {Table} from \"semantic-ui-react\";\nimport {Asset, Holder, TransferRecord} from \"../../types\";\n\nexport interface TransferRecordTableProps {\n  assets: Record<string, Asset>\n  holders: Record<string, Holder>\n  records: TransferRecord[]\n}\n\nexport const TransferRecordTable: FC<TransferRecordTableProps> = ({holders, assets, records}) => (\n  <Table celled selectable>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Date</Table.HeaderCell>\n        <Table.HeaderCell>Asset</Table.HeaderCell>\n        <Table.HeaderCell>Asset Serial</Table.HeaderCell>\n        <Table.HeaderCell>From</Table.HeaderCell>\n        <Table.HeaderCell>To</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      { records.map(({id, asset, date, from, to}) =>\n        <Table.Row key={id} data-id={id}>\n          <Table.Cell>{date}</Table.Cell>\n          <Table.Cell>{assets[asset].name}</Table.Cell>\n          <Table.Cell>{assets[asset].serial}</Table.Cell>\n          <Table.Cell>{ holders[from as string] && holders[from as string].name}</Table.Cell>\n          <Table.Cell>{ holders[to as string] && holders[to as string].name}</Table.Cell>\n        </Table.Row>\n      )}\n    </Table.Body>\n  </Table>\n);\n\n\n","import {Section, SectionHandlers} from \"../utils\";\nimport React, {FC} from \"react\";\nimport {Menu as MenuSemantic, Icon} from \"semantic-ui-react\";\n\nexport interface MenuProps {\n  section: Section,\n  handlers: SectionHandlers\n}\n\nexport const Menu: FC<MenuProps> = ({section, handlers}) => (\n  <MenuSemantic icon='labeled' stackable>\n    <MenuSemantic.Item\n      name='warehouse'\n      active={section === Section.Assets}\n      onClick={handlers.goToAssets}\n    >\n      <Icon name='warehouse'/>\n      Assets\n    </MenuSemantic.Item>\n\n    <MenuSemantic.Item\n      name='user'\n      active={section === Section.Holders}\n      onClick={handlers.goToHolders}\n    >\n      <Icon name='user'/>\n      Holders\n    </MenuSemantic.Item>\n\n    <MenuSemantic.Item\n      name='history'\n      active={section === Section.TransferRecords}\n      onClick={handlers.gotoTransferRecords}\n    >\n      <Icon name='history'/>\n      History\n    </MenuSemantic.Item>\n  </MenuSemantic>\n);\n","import {AssetForm} from \"../components/AssetForm\";\nimport {List, Segment} from \"semantic-ui-react\";\nimport React, {FC, MouseEventHandler, useState} from \"react\";\nimport {Asset, Store, TransferRecord} from \"../types\";\nimport {Action, Actions} from \"../store\";\nimport {BackButton, TransferRecordTable} from \"../components\";\n\nexport interface AssetCRUDProps extends Store {\n  dispatch: (x: Action) => void\n}\n\n\nfunction filterTransferRecords(id: string) {\n  return ({asset}: TransferRecord) => asset === id;\n}\n\nexport const AssetCRUD: FC<AssetCRUDProps> = ({assets, holders, records, dispatch}) => {\n  const onSubmit = (a: Asset) => {\n    dispatch({type: Actions.UPSERT_ASSET, payload: a})\n  };\n\n  const [editionMode, setEditionMode] = useState(false);\n  const [currentAsset, setCurrentAsset] = useState('');\n\n  const onClickAsset: MouseEventHandler<HTMLAnchorElement> =\n    e => {\n      e.preventDefault();\n      const {currentTarget: {dataset}} = e;\n\n      if (dataset.id) {\n        console.log(assets[dataset.id]);\n        setCurrentAsset(dataset.id);\n        setEditionMode(true);\n      }\n    };\n\n  const onClickBack = () => {\n    setEditionMode(false);\n  };\n\n  const history = records\n    .filter(filterTransferRecords(currentAsset));\n\n  return editionMode ?\n    <>\n      <Segment>\n        <BackButton onClick={onClickBack}/>\n        <h2>Edit Asset</h2>\n        <AssetForm holders={holders} onSubmit={onSubmit} asset={assets[currentAsset]}/>\n      </Segment>\n      {history.length &&\n      <Segment>\n        <h2>{assets[currentAsset].name} History</h2>\n        <TransferRecordTable\n          holders={holders}\n          assets={assets}\n          records={history}\n        />\n      </Segment>\n      }\n    </>\n    :\n    <>\n      <Segment>\n        <h2>Add Asset</h2>\n        <AssetForm holders={holders} onSubmit={onSubmit}/>\n      </Segment>\n      <Segment>\n        <h3>Free</h3>\n        <List divided relaxed>\n          {\n            Object.values(assets).filter(x => !x.assignedTo).map(({name, id, assignedTo}) =>\n              <List.Item key={id} onClick={onClickAsset} data-id={id}>\n                <List.Content>\n                  <List.Header>{name}</List.Header>\n                  {typeof assignedTo === 'string' ? `Assigned to ${holders[assignedTo].name}` : 'Free'}\n                </List.Content>\n              </List.Item>)\n          }\n        </List>\n        <h3>Taken</h3>\n        <List divided relaxed>\n          {\n            Object.values(assets).filter(x => x.assignedTo).map(({name, id, assignedTo}) =>\n              <List.Item key={id} onClick={onClickAsset} data-id={id}>\n                <List.Content>\n                  <List.Header>{name}</List.Header>\n                  {typeof assignedTo === 'string' ? `Assigned to ${holders[assignedTo].name}` : 'Free'}\n                </List.Content>\n              </List.Item>)\n          }\n        </List>\n      </Segment>\n    </>\n};\n","import {Segment} from \"semantic-ui-react\";\nimport {HolderForm} from \"../components/HolderForm\";\nimport React, {FC, MouseEventHandler, useState} from \"react\";\nimport {Holder, Store, TransferRecord} from \"../types\";\nimport {Action, Actions} from \"../store\";\nimport {BackButton, HolderTable, TransferRecordTable} from \"../components\";\n\nexport interface HolderCRUDProps extends Store {\n  dispatch: (x: Action) => void\n}\n\nfunction filterTransferRecords(id: string) {\n  return (x: TransferRecord) => x.from === id || x.to === id;\n}\n\nexport const HolderCRUD: FC<HolderCRUDProps> =\n  ({holders, records, assets, dispatch}) => {\n    const [editionMode, setEditionMode] = useState(false);\n    const [currentHolder, setCurrentHolder] = useState('');\n\n    const onSubmit = (h: Holder) => {\n      dispatch({type: Actions.UPSERT_HOLDER, payload: h})\n    };\n\n    const onClick: MouseEventHandler<HTMLTableRowElement> =\n      e => {\n        e.preventDefault();\n        const {currentTarget: {dataset}} = e;\n\n        if (dataset.id) {\n          setCurrentHolder(dataset.id);\n          setEditionMode(true);\n        }\n      };\n\n\n    const onClickBack = () => {\n      setEditionMode(false);\n    };\n\n    const history = records\n      .filter(filterTransferRecords(currentHolder));\n\n    return (\n      <>\n        {editionMode\n          ?\n          <>\n            <Segment>\n              <BackButton onClick={onClickBack}/>\n              <h2>Edit Holder</h2>\n              <HolderForm onSubmit={onSubmit} holder={holders[currentHolder]}/>\n            </Segment>\n            {!!history.length &&\n            <Segment>\n              <h2>{holders[currentHolder].name} History</h2>\n              <TransferRecordTable\n                holders={holders}\n                assets={assets}\n                records={history}\n              />\n            </Segment>\n            }\n          </>\n          :\n          <>\n            <Segment>\n              <h2>Add Holder</h2>\n              <HolderForm onSubmit={onSubmit}/>\n            </Segment>\n\n            <Segment>\n              <HolderTable\n                holders={holders}\n                onClick={onClick}\n              />\n            </Segment>\n          </>\n        }\n      </>\n    )\n  };\n","import x from './App';\nexport default x;\nexport * from './App';\n","import React, {FC, useReducer} from 'react';\nimport './App.css';\nimport {getInitialState, rootReducer} from \"../store\";\nimport {AssetCRUD, HolderCRUD} from \"../views\";\nimport {Menu, TransferRecordTable} from '../components';\nimport {Container} from \"semantic-ui-react\";\nimport {Section, useSectionManager} from \"../utils\";\n\nexport const App: FC = () => {\n  const initialState = getInitialState();\n  const [{assets, holders, records}, dispatch] = useReducer(rootReducer, initialState);\n  const [section, handlers] = useSectionManager();\n\n  return (\n    <>\n      <Menu section={section} handlers={handlers}/>\n      <Container className={'main'}>\n\n        {section === Section.Holders &&\n        <HolderCRUD\n          assets={assets}\n          records={records}\n          holders={holders}\n          dispatch={dispatch}\n        />\n        }\n        {section === Section.Assets &&\n        <AssetCRUD\n          records={records}\n          assets={assets}\n          holders={holders}\n          dispatch={dispatch}\n        />\n        }\n        {section === Section.TransferRecords &&\n        <TransferRecordTable\n          assets={assets}\n          holders={holders}\n          records={records}\n        />\n        }\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {Store} from \"../types\";\nimport {StoreService} from \"../services\";\nimport {NAMESPACE} from \"../constants\";\nimport {store} from \"./data\";\nimport {sortStore} from \"./sortStore\";\n\nexport function getInitialState(): Store {\n  const cache = StoreService.get(NAMESPACE);\n  if (!!cache) {\n    return cache as Store;\n  } else {\n    return sortStore(store)\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}