{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","views/AssetCRUD.tsx"],"names":["SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Segment_SegmentGroup","SegmentInline","Segment_SegmentInline","Segment","attached","basic","circular","clearing","color","disabled","floated","inverted","loading","placeholder","padded","secondary","tertiary","textAlign","vertical","Group","Inline","__webpack_exports__","AssetCRUD","_ref2","id","assets","holders","records","dispatch","onSubmit","type","Actions","UPSERT_ASSET","payload","_useState","useState","_useState2","_Users_ulises_WebstormProjects_bizenter_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","editionMode","setEditionMode","_useState3","_useState4","currentAsset","setCurrentAsset","history","filter","_ref","asset","react__WEBPACK_IMPORTED_MODULE_3___default","Fragment","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","_components__WEBPACK_IMPORTED_MODULE_5__","onClick","name","_components_Forms_AssetForm__WEBPACK_IMPORTED_MODULE_1__","length","alignContent","icon","data","keys","kpi","e","preventDefault","dataset","currentTarget","console","log"],"mappings":"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","file":"static/js/3.d5fa691f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import {AssetForm} from \"../components/Forms/AssetForm\";\nimport {Segment} from \"semantic-ui-react\";\nimport React, {FC, MouseEventHandler, useState} from \"react\";\nimport {Asset, Store, TransferRecord} from \"../types\";\nimport {Action, Actions} from \"../store\";\nimport {BackButton, Data, Flex, TransferRecordTable, AssetTable} from \"../components\";\n\nexport interface AssetCRUDProps extends Store {\n  dispatch: (x: Action) => void\n}\n\n\nfunction filterTransferRecords(id: string) {\n  return ({asset}: TransferRecord) => asset === id;\n}\n\nexport const AssetCRUD: FC<AssetCRUDProps> = ({assets, holders, records, dispatch}) => {\n  const onSubmit = (a: Asset) => {\n    dispatch({type: Actions.UPSERT_ASSET, payload: a})\n  };\n\n  const [editionMode, setEditionMode] = useState(false);\n  const [currentAsset, setCurrentAsset] = useState('');\n\n  const onClickAsset: MouseEventHandler<HTMLAnchorElement> =\n    e => {\n      e.preventDefault();\n      const {currentTarget: {dataset}} = e;\n\n      if (dataset.id) {\n        console.log(assets[dataset.id]);\n        setCurrentAsset(dataset.id);\n        setEditionMode(true);\n      }\n    };\n\n  const onClickBack = () => {\n    setEditionMode(false);\n  };\n\n  const history = records\n    .filter(filterTransferRecords(currentAsset));\n\n  return editionMode ?\n    <>\n      <Segment>\n        <BackButton onClick={onClickBack}/>\n        <h2>{assets[currentAsset].name} details</h2>\n        <AssetForm\n          holders={holders}\n          onSubmit={onSubmit}\n          asset={assets[currentAsset]}\n        />\n      </Segment>\n      {history.length &&\n      <Segment>\n        <h2>{assets[currentAsset].name} History</h2>\n        <TransferRecordTable\n          holders={holders}\n          assets={assets}\n          records={history}\n        />\n      </Segment>\n      }\n    </>\n    :\n    <>\n      <Flex alignContent=\"between\">\n        <AssetForm holders={holders} onSubmit={onSubmit}/>\n        <Data\n          icon=\"warehouse\"\n          data={Object.keys(assets).length}\n          kpi={'Total Assets'}\n        />\n      </Flex>\n     <AssetTable\n      assets={assets}\n      holders={holders}\n      onClick={onClickAsset}\n     />\n    </>\n};\n\nexport default AssetCRUD;\n"],"sourceRoot":""}